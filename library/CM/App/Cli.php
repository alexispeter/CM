<?php

class CM_App_Cli extends CM_Cli_Runnable_Abstract {

    public function setup() {
        $this->_getOutput()->writeln('Setting up filesystem…');
        CM_App::getInstance()->setupFilesystem();
        $this->_getOutput()->writeln('Setting up database…');
        CM_App::getInstance()->setupDatabase();
        $this->_getOutput()->writeln('Setting up translations…');
        CM_App::getInstance()->setupTranslations();
    }

    public function fillCaches() {
        $this->_getOutput()->writeln('Warming up caches…');
        CM_App::getInstance()->fillCaches();
    }

    public function deploy() {
        $this->setup();
        $this->setDeployVersion();

        $dbCli = new CM_Db_Cli($this->_getInput(), $this->_getOutput());
        $dbCli->runUpdates();
    }

    public function generateConfigInternal() {
        $generator = new CM_Config_Generator();

        // Create model class types and action verbs config PHP
        $configPhp = CM_File::create(DIR_ROOT . 'resources/config/internal.php');
        $configPhp->appendLine('<?php');
        $configPhp->appendLine('// This is autogenerated config file. You should not change it manually.');
        $configPhp->appendLine();
        $configPhp->appendLine('return function (CM_Config_Node $config) {');
        $configPhp->appendLine(CM_Util::indent($generator->generateConfigClassTypes(), '    '));
        $configPhp->appendLine(CM_Util::indent($generator->generateConfigActionVerbs(), '    '));
        $configPhp->appendLine('};');
        $this->_getOutput()->writeln('Created `' . $configPhp->getPath() . '`');

        // Create model class types and action verbs config JS
        $configJs = CM_File::create(DIR_ROOT . 'resources/config/js/internal.js');
        $classTypes = $generator->getNamespaceTypes();
        $configJs->appendLine('cm.model.types = ' . CM_Params::encode(array_flip($classTypes['CM_Model_Abstract']), true) . ';');
        $configJs->appendLine('cm.action.types = ' . CM_Params::encode(array_flip($classTypes['CM_Action_Abstract']), true) . ';');
        $this->_getOutput()->writeln('Created `' . $configJs->getPath() . '`');
    }

    /**
     * @param int|null $deployVersion
     */
    public function setDeployVersion($deployVersion = null) {
        $deployVersion = (null !== $deployVersion) ? (int) $deployVersion : time();
        $sourceCode = join(PHP_EOL, array(
            '<?php',
            'return function (CM_Config_Node $config) {',
            '    $config->deployVersion = ' . $deployVersion . ';',
            '};',
            '',
        ));
        $targetPath = DIR_ROOT . 'resources/config/deploy.php';
        CM_File::create($targetPath, $sourceCode);
    }

    public static function getPackageName() {
        return 'app';
    }
}
