.clearfix {
	*zoom: 1;
	display: block;
	&:before,
	&:after {
		display: table;
		content: "";
	}
	&:after {
		clear: both;
	}
}

.nowrap {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

.quote {
	font-style: italic;
	&:before {
		content: "«";
	}
	&:after {
		content: "»";
	}
}

.fontface(@fontname, @fontfile) {
	font-family: '@{fontname}';
	src: url(urlFont('@{fontfile}.eot'));
	src: url(urlFont('@{fontfile}.eot') + "?#iefix") format('embedded-opentype'),
	url(urlFont('@{fontfile}.woff')) format('woff'),
	url(urlFont('@{fontfile}.ttf')) format('truetype'),
	url(urlFont('@{fontfile}.svg') + "#@{fontname}") format('svg');
	font-weight: normal;
	font-style: normal;
}

.link() {
	color: @colorFgLink;
	text-decoration: none;
}

.link_hover() {
	text-decoration: underline;
}

.bg_emphasize() {
	.background-color(darken(@colorBg, 6));
}

.bg_emphasize_light() {
	.background-color(darken(@colorBg, 3));
}

.bg_select() {
	.background-color(@colorBgSelect);
}


.border(@color) {
	border: 1px solid @color;
}

.border_shy() {
	border: 1px solid lighten(@colorFgBorder, 5);
}

.message() {
	color: white;
	background: #f5c400;
	border-color: #fcad66;
}

.error() {
	border-color: @colorError;
	background:	@colorError;
	color: white;
}

.notice() {
	border-color: @colorNotice;
	background: @colorNotice;
	color: white;
}

/* Fonts */
.font(@size, @family, @color) {
	font: normal @size ~"/" @size * 1.5 @family;
	color: @color;
}

.font_placeholder() {
	font-style: italic;
	color: @colorFgShy;
}

.input_focus() {
	border: 1px solid lighten(@colorNotice, 15);
}

.input_disabled() {
	.opacity(.5);
	.box-shadow(none);
}

.input_text() {
	border-radius: 2px;
	padding-left: 6px;
	padding-right: 6px;
	background: white;
	width: 100%;
	overflow: hidden;
	line-height: 16px;
}

.input_text_height() {
	.box-sizing(border-box);
	height: @heightInputText;
	padding-top: (@heightInputText - 16px) / 2;
	padding-bottom: (@heightInputText - 16px) / 2;
}

.input_textarea() {
	.box-sizing(border-box);
	height: @heightInputTextarea;
	overflow: auto;
	resize: vertical;
}

.input_button(@size) {
	width: auto;
	min-width: @size;
	height: @size;
	margin: 1px;
	padding: 0 @size / 3;
	border-radius: 2px;
	font-weight: bold;
	font-size: @fontSizeButton;
	cursor: pointer;
	overflow: visible;
	white-space: nowrap;

	.icon, .label {
		display: inline-block;
		vertical-align: middle;
		line-height: @size;
	}
	.icon {
		font-size: @iconSizeClickable;
		top: -2px;
	}
	&.hasLabel, &.hasIcon.hasLabel{
		.label {
			position: relative;
			top: -1px;
		}
	}
}

.input_button_color() {
	color: @colorFgButtonFont;
	.box-shadow(0 0 2px darken(@colorBgButton, 15));
	.gradient(vertical, @colorBgButton, darken(@colorBgButton, 6));
	border: 1px solid lighten(@colorFgButton, 60);
}

.input_button_hover() {
	border: 1px solid lighten(@colorFgButton, 50);
	.box-shadow(0 1px 3px darken(@colorBgButton, 15));
	.gradient(vertical, @colorBgButton, darken(@colorBgButton, 12));
	color: @colorFgButton;
}

.input_button_active() {
	background: darken(@colorBg, 12);
	border: 1px solid darken(@colorFgBorder, 30);
	.box-shadow(inset 0 0 5px 1px darken(@colorBg, 25));
}

.input_button_alt() {
	color: @colorFgButtonAltFont;
	.gradient(vertical, @colorBgButtonAlt, @colorBgButtonAlt);
	border: 1px solid @colorFgButtonAlt;
	text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.2);

	.icon {
		color: @colorFgButtonAltFont;
	}
}

.input_button_alt_hover() {
	.gradient(vertical, @colorFgButtonAlt, darken(@colorFgButtonAlt, 20));
	border: 1px solid darken(@colorFgButtonAlt, 20);
	.box-shadow(none);
}

.input_button_alt_active() {
	.box-shadow(inset -1px -1px 5px @colorBgButtonAlt, inset 1px 1px 5px @colorBgButtonAlt);
	.gradient(vertical, lighten(@colorFgButtonAlt, 2), lighten(@colorFgButtonAlt, 2));
	border: 1px solid darken(@colorFgButtonAlt, 10);
}


